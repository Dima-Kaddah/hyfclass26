{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","window","ol","target","current","id","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","ref","PlaceItem","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","map","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","console","lod","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.e464e540.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = (props) => {\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n\n  useEffect(() => {\n    new window.ol.Map({\n      target: mapRef.current.id,\n      layers: [\n        new window.ol.layer.Tile({\n          source: new window.ol.source.OSM(),\n        }),\n      ],\n      view: new window.ol.View({\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\n        zoom: zoom,\n      }),\n    });\n  }, [center, zoom]);\n\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n      id=\"map\"\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = (props) => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n        'DELETE',\n        null,\n        { Authorization: 'Bearer ' + auth.token },\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}> CLOSE </Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\n\nimport './PlaceList.css';\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2> No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`,\n        );\n        setLoadedPlaces(responseData.places);\n        console.lod(responseData);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (deletedPlaceId) => {\n    setLoadedPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedPlaceId),\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}